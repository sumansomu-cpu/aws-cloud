vi providers.tf
terraform {
  required_providers {
    aws = {
      source = "hashicorp/aws"
      version = "6.9.0"
    }
  }
}

provider "aws" {
  # Configuration options
}

#--- S3
vi s3.tf
resource "aws_s3_bucket" "mys3" {
  bucket = var.s3_name

  tags = {
    Name        = var.s3_name
  }
}

#--- VPC
vi vpc.tf
resource "aws_vpc" "myvpc" {
  cidr_block       = var.cidr_block
  tags = {
    Name = var.vpc_name
  }
}
resource "aws_internet_gateway" "myigw" {
  vpc_id = aws_vpc.myvpc.id
  tags = {
    Name = "${var.vpc_name}-IGW"
  }
}
resource "aws_route_table" "my-route" {
  vpc_id = aws_vpc.myvpc.id
  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.myigw.id
  }
tags = {
    Name = "${var.vpc_name}-ROUTE"
  }
}
resource "aws_subnet" "mysub" {
  vpc_id     = aws_vpc.myvpc.id
  cidr_block = var.sub_cidr
  tags = {
    Name = "${var.vpc_name}-SUB"
  }
}
resource "aws_route_table_association" "sub-to-rt" {
  subnet_id      = aws_subnet.mysub.id
  route_table_id = aws_route_table.my-route.id
}

#--- EC2
resource "aws_instance" "myec2" {
  ami           = var.ami
  instance_type = var.instance_type
  key_name = var.key_name
  associate_public_ip_address = "true"
  subnet_id = aws_subnet.mysub.id
  tags = {
    Name = var.server_name
  }
}


#--- DECLARING VARIABLES
vi variables.tf
variable "s3_name" {}
variable "cidr_block" {}
variable "vpc_name" {}
variable "sub_cidr" {}
variable "key_name" {}
variable "ami" {}
variable "server_name" {}
variable "instance_type" {}


#--- DECLARING VALUES TO VARIABLES
vi variables.tfvars
s3_name = "puma-prod-s3"
cidr_block = "192.168.0.0/16"
vpc_name = "puma-vpc"
sub_cidr = "192.168.10.0/24"
ami = "ami-0e1989e836322f58b"
key_name = "new-key"
instance_type = "t2.micro"
server_name = "puma-prod-01"


terraform plan -var-file variables.tfavrs
terraform apply -var-file variables.tfvars -auto-approve
terraform destroy -var-file variables.tfvars -auto-approve



